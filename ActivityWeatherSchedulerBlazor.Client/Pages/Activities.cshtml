@using ActivityWeatherSchedulerLibraryNETStandard.Models
@using ActivityWeatherSchedulerLibraryNETStandard
@page "/Activities"
@inject HttpClient Http

<h1>Activities</h1>

<div class="form-horizontal">
	<div class="form-group">
		<label for="inputName" class="col-md-2 control-label">Email:</label>
		<div class="col-md-10 padding-left-right-0">
			<input type="text" onblur="@GetActivities" bind="@Email" class="form-control" placeholder="user@email.com" />
		</div>
	</div>
	<div class="form-group">
		<label for="zipCode" class="col-md-2 control-label">Zip Code:</label>
		<div class="col-md-10 padding-left-right-0">
			<input type="text" bind="@ZipCode" class="form-control" id="zipCode"/>
		</div>
	</div>
	<div class="form-group">
		<label for="inputName" class="col-md-2 control-label">Summary:</label>
		<div class="col-md-10 padding-left-right-0">
			<input type="text" bind="@Summary" class="form-control" placeholder="Summary" />
		</div>
	</div>
	<div class="form-group">
		<label for="inputName" class="col-md-2 control-label">Temperature (F°):</label>
		<div class="col-md-10 padding-left-right-0">
			<input type="text" bind="@TemperatureF" class="form-control" />
		</div>
	</div>
	<div class="form-check">
		<input type="checkbox" class="form-check-input" bind="@Above" id="aboveCheck" />
		<label class="form-check-label" for="aboveCheck">Above this Temperature?</label>
	</div>
	<button class="btn btn-primary" onclick="@PostActivity">Add Activity</button>
</div>

<h2>List of activites for @Email:</h2>

@if (activities == null || activities.Count == 0)
{
	<p><em>No Activities to show for this email.</em></p>
}
else
{
	<div>
		<DownloadButton Payload="Saul Goodman" FileName="File.txt">My Download</DownloadButton>
	</div>
	<table class="table">
		<thead>
			<tr>
				<th>Summary</th>
				<th>Temp. (F°)</th>
				<th>Above or Below</th>
				<th>ICal File</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var activity in activities)
			{
			<tr>
				<td>@activity.Summary</td>
				<td>@activity.TemperatureF</td>
				@if (activity.Above == true)
				{
					<td>Above</td>
				}
				else
				{
					<td>Below</td>
				}
				@if (string.IsNullOrWhiteSpace(activity.CalendarString))
				{
					<td><DownloadButton Payload="" FileName="">Conditions not met</DownloadButton></td>
				}
				else
				{
					<td><DownloadButton Payload="@activity.CalendarString" FileName="activity.ical">ICal File</DownloadButton></td>
				}
			</tr>
			}
		</tbody>
	</table>
}


@functions {
	List<Activity> activities;
	string Email = string.Empty;
	string Summary = string.Empty;
	decimal TemperatureF = 32;
	bool Above = false;
	private string ZipCode { get; set; } = "84103";

	protected async Task GetActivities()
	{
		activities = await Http.GetJsonAsync<List<Activity>>($"api/WeatherForecast/GetActivities/{Email}");

		if (activities.Count > 0)
		{
			StateHasChanged();
		}
	}

	protected async Task PostActivity()
	{
		if (Validation.IsEmail(Email) && Validation.IsFiveDigits(ZipCode))
		{
			var activity = new Activity
			{
				EmailAddress = Email,
				ZipCode = ZipCode,
				Summary = Summary,
				TemperatureF = TemperatureF,
				Above = Above
			};

			await Http.PostJsonAsync<Activity>($"api/WeatherForecast/AddActivity", activity);
			await GetActivities();
		}
	}
}
